@model RentEasy.Models.RenterCreateViewModel
@{
    ViewData["Title"] = "Add New Item";
}

<div class="container mt-5">
    <h2 class="mb-4 text-primary text-center">Rent an Item</h2>

    <div class="card shadow-sm p-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="All" class="alert alert-danger"></div>

            <!-- Item Selection -->
            <div class="form-group">
                <label for="ItemId" class="font-weight-bold">Select Item</label>
                <select id="ItemId" asp-for="ItemId" class="form-control" required>
                    <option value="">-- Select an Item --</option>
                    @foreach (var item in Model.AvailableItems)
                    {
                        <option value="@item.ItemId">@item.Title</option>
                    }
                </select>
            </div>

            <!-- Description Field -->
            <div class="form-group">
                <label asp-for="ItemDescription" class="font-weight-bold">Description</label>
                <textarea asp-for="ItemDescription" id="ItemDescription" class="form-control bg-light" readonly rows="3"></textarea>
                <input type="hidden" asp-for="ItemDescription" id="HiddenItemDescription" />
            </div>

            <!-- Image Preview -->
            <div class="form-group">
                <label class="font-weight-bold">Item Images</label>
                <div id="imageGallery" class="border p-3 rounded text-center d-flex flex-wrap justify-content-center">
                    <p id="noImagesMessage" class="text-muted">Select an item to see images</p>
                </div>
            </div>

            <!-- Rent Dates -->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="RentStartDate" class="font-weight-bold">Rent Start Date</label>
                        <input asp-for="RentStartDate" type="date" class="form-control" required />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="RentEndDate" class="font-weight-bold">Rent End Date</label>
                        <input asp-for="RentEndDate" type="date" class="form-control" required />
                    </div>
                </div>
            </div>

            <!-- Buttons -->
            <div class="d-flex justify-content-between mt-4">
                <button type="submit" class="btn btn-primary btn-lg w-45">Rent Item</button>
                <a href="@Url.Action("Index", "RenterDashboard")" class="btn btn-secondary btn-lg w-45">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById("ItemId").addEventListener("change", function () {
            var itemId = this.value;
            var imageGallery = document.getElementById("imageGallery");
            var noImagesMessage = document.getElementById("noImagesMessage");
            var descriptionField = document.getElementById("ItemDescription");
            var hiddenDescriptionField = document.getElementById("HiddenItemDescription");

            // Clear previous images
            imageGallery.innerHTML = "";
            imageGallery.appendChild(noImagesMessage);

            if (itemId) {
                fetch(`/Renter/GetItemDetails?id=${itemId}`) // <-- Updated backend endpoint
                    .then(response => response.json())
                    .then(data => {
                        // Update description
                        descriptionField.value = data.itemDescription || "No description available";
                        hiddenDescriptionField.value = data.itemDescription || "";

                        // Handle images
                        if (data.itemImages && data.itemImages.length > 0) {
                            imageGallery.innerHTML = "";
                            data.itemImages.forEach(imgSrc => {
                                var imgContainer = document.createElement('div');
                                imgContainer.className = 'm-2';

                                var img = document.createElement('img');
                                img.src = imgSrc.startsWith("/") ? imgSrc : `/uploads/${imgSrc}`;
                                img.alt = "Item Image";
                                img.className = "rounded border";
                                img.style.maxWidth = "150px";
                                img.style.maxHeight = "150px";
                                img.style.objectFit = "contain";

                                imgContainer.appendChild(img);
                                imageGallery.appendChild(imgContainer);
                            });
                        } else {
                            noImagesMessage.textContent = "No images available for this listing";
                        }
                    })
                    .catch(error => {
                        console.error("Error fetching listing details:", error);
                        descriptionField.value = "";
                        hiddenDescriptionField.value = "";
                        noImagesMessage.textContent = "Error loading listing details";
                    });
            } else {
                descriptionField.value = "";
                hiddenDescriptionField.value = "";
                noImagesMessage.textContent = "Select an item to see images";
            }
        });
    </script>
}
